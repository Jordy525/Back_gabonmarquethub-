const mysql = require('mysql2/promise');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

// Configuration de la base de donn√©es
const dbConfig = {
  host: process.env.DB_HOST || 'localhost',
  user: process.env.DB_USER || 'root',
  password: process.env.DB_PASSWORD || '',
  database: process.env.DB_NAME || 'gabon_trade_hub',
  port: process.env.DB_PORT || 3306
};

async function runUserNotificationsMigration() {
  let connection;
  
  try {
    console.log('üöÄ Ex√©cution de la migration des notifications utilisateurs...');
    
    // Connexion √† la base de donn√©es
    connection = await mysql.createConnection(dbConfig);
    console.log('‚úÖ Connexion √† la base de donn√©es √©tablie');

    // Lire le fichier SQL
    const sqlPath = path.join(__dirname, 'migrations', 'create_user_notifications.sql');
    const sqlContent = fs.readFileSync(sqlPath, 'utf8');
    
    console.log('üìÑ Contenu SQL charg√©');

    // Ex√©cuter la migration
    await connection.execute(sqlContent);
    console.log('‚úÖ Table notifications cr√©√©e avec succ√®s');

    // V√©rifier que la table a √©t√© cr√©√©e
    const [tables] = await connection.execute(`
      SELECT TABLE_NAME 
      FROM information_schema.TABLES 
      WHERE TABLE_SCHEMA = ? AND TABLE_NAME = 'notifications'
    `, [process.env.DB_NAME || 'gabon_trade_hub']);

    if (tables.length > 0) {
      console.log('‚úÖ V√©rification: Table notifications existe');
      
      // Afficher la structure de la table
      const [columns] = await connection.execute('DESCRIBE notifications');
      console.log('üìä Structure de la table notifications:');
      columns.forEach(col => {
        console.log(`  - ${col.Field}: ${col.Type} ${col.Null === 'YES' ? '(nullable)' : '(not null)'}`);
      });
    } else {
      console.log('‚ùå Erreur: Table notifications non trouv√©e');
    }

    console.log('üéâ Migration des notifications utilisateurs termin√©e avec succ√®s !');

  } catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error);
    
    if (error.code === 'ER_TABLE_EXISTS_ERROR') {
      console.log('‚ÑπÔ∏è La table notifications existe d√©j√†');
    } else if (error.code === 'ER_CANT_CREATE_TABLE') {
      console.log('‚ùå Impossible de cr√©er la table. V√©rifiez les permissions.');
    } else if (error.code === 'ER_NO_REFERENCED_ROW_2') {
      console.log('‚ùå Erreur de cl√© √©trang√®re. V√©rifiez que les tables r√©f√©renc√©es existent.');
    }
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå Connexion ferm√©e');
    }
  }
}

// Ex√©cuter la migration
runUserNotificationsMigration().catch(console.error);
